function [reflexionTotaleInterne, rayonRefracte] = Refract(problem, rayon, normale, point, entrerSphere)

rayonRefracte = {};
reflexionTotaleInterne = false;

if isEnteringSphere
    n_i = problem.param.n_ext;
    n_t = problem.param.n_int;
else
    n_i = problem.param.n_int;
    n_t = problem.param.n_ext;
end

i = normale/norm(normale);
u_i = rayon.line_direction/norm(rayon.line_direction);

if n_i > n_t
    if real(asin(n_t/n_i)) < real(acos(dot(i, u_i)))
        reflexionTotaleInterne = true;
        return;
    end
end

j = cross(u_i, i);
j = j/norm(j);
k = cross(i, j);
k = k/norm(k);

s_i = dot(k, u_i);
s_t = n_i/n_t * s_i;

u_t = -i*real(sqrt(1-s_t^2)) + k*s_t;

rayonRefracte.line_direction = u_t;
rayonRefracte.line_point = point;
rayonRefracte.color = ray.color;
rayonRefracte.nRebound = ray.nRebound + 1;
rayonRefracte.origin = ray.origin;
rayonRefracte.origin_direction = ray.origin_direction;
rayonRefracte.distance = ray.distance;

end
